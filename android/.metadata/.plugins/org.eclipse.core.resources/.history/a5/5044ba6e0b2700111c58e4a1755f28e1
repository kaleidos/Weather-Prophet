package net.kaleidos.weatherprophet;

import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.CheckBox;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.TimePicker;

public class WeatherProphetActivity extends Activity {

	String authToken = null;
	PreferencesController preferencesController;

	// ////////////////////////////////////////////////////////
	// /// GRAPHIC ELEMENTS ////////
	// ////////////////////////////////////////////////////////
	TimePicker timePicker = null;
	CheckBox chkActivate = null;
	CheckBox chkNotification = null;

	// Rain
	SeekBar seekRain = null;
	TextView txtRain = null;
	CheckBox chkRainWakeUp = null;
	Spinner spnRainOffset = null;
	CheckBox chkRainEmail = null;

	// Snow
	SeekBar seekSnow = null;
	TextView txtSnow = null;
	CheckBox chkSnowWakeUp = null;
	Spinner spnSnowOffset = null;
	CheckBox chkSnowEmail = null;

	// ////////////////////////////////////////////////////////

	public TimePicker getTimePicker() {
		if (timePicker == null) {
			timePicker = (TimePicker) findViewById(R.id.timeBase);
		}
		return timePicker;
	}

	public String getAuthToken() {
		return authToken;
	}
	
	public void setAuthToken(String authToken) {
		this.authToken=authToken;
	}

	public CheckBox getChkActivate() {
		if (chkActivate == null) {
			chkActivate = (CheckBox) findViewById(R.id.chkActivate);
		}
		return chkActivate;
	}

	public CheckBox getChkNotification() {
		if (chkNotification == null) {
			chkNotification = (CheckBox) findViewById(R.id.chkNotification);
		}
		return chkNotification;
	}

	public SeekBar getSeekRain() {
		if (seekRain == null) {
			seekRain = (SeekBar) findViewById(R.id.seekRain);
		}
		return seekRain;
	}

	public TextView getTxtRain() {
		if (txtRain == null) {
			txtRain = (TextView) findViewById(R.id.txtRain);
		}
		return txtRain;
	}

	public CheckBox getChkRainWakeUp() {
		if (chkRainWakeUp == null) {
			chkRainWakeUp = (CheckBox) findViewById(R.id.chkRainWakeUp);
		}
		return chkRainWakeUp;
	}

	public Spinner getSpnRainOffset() {
		if (spnRainOffset == null) {
			spnRainOffset = (Spinner) findViewById(R.id.spnRainOffset);
		}
		return spnRainOffset;
	}

	public CheckBox getChkRainEmail() {
		if (chkRainEmail == null) {
			chkRainEmail = (CheckBox) findViewById(R.id.chkRainEmail);
		}
		return chkRainEmail;
	}

	public SeekBar getSeekSnow() {
		if (seekSnow == null) {
			seekSnow = (SeekBar) findViewById(R.id.seekSnow);
		}
		return seekSnow;
	}

	public TextView getTxtSnow() {
		if (txtSnow == null) {
			txtSnow = (TextView) findViewById(R.id.txtSnow);
		}
		return txtSnow;
	}

	public CheckBox getChkSnowWakeUp() {
		if (chkSnowWakeUp == null) {
			chkSnowWakeUp = (CheckBox) findViewById(R.id.chkSnowWakeUp);
		}
		return chkSnowWakeUp;
	}

	public Spinner getSpnSnowOffset() {
		if (spnSnowOffset == null) {
			spnSnowOffset = (Spinner) findViewById(R.id.spnSnowOffset);
		}
		return spnSnowOffset;
	}

	public CheckBox getChkSnowEmail() {
		if (chkSnowEmail == null) {
			chkSnowEmail = (CheckBox) findViewById(R.id.chkSnowEmail);
		}
		return chkSnowEmail;
	}
	
	public PreferencesController getPreferencesController() {
		if (preferencesController == null) {
			preferencesController = new PreferencesController(this);
		}
		return preferencesController;
	}

	

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		// Avoid reset activity at screen rotate
		super.onConfigurationChanged(newConfig);
	}

	@Override
	public void onResume() {
		super.onResume();
		Preferences preferences=getPreferencesController().loadPreferences();
		if (preferences!=null){
			getTimePicker().setIs24HourView(true);
			getTimePicker().setCurrentHour(preferences.hour);
			getTimePicker().setCurrentMinute(preferences.minutes);
	
			getChkActivate().setChecked(preferences.activate);
			getChkNotification().setChecked(preferences.notification);
	
			// Rain
			getSeekRain().setProgress(preferences.probRain);
			getChkRainWakeUp().setChecked(preferences.rainWakeUp);
			getSpnRainOffset().setSelection(preferences.offsetRain);
			getTxtRain().setText(preferences.probRain + "%");
			getChkRainEmail().setChecked(preferences.rainEmail);
	
			// Snow
			getSeekSnow().setProgress(preferences.probSnow);
			getChkSnowWakeUp().setChecked(preferences.snowWakeUp);
			getSpnSnowOffset().setSelection(preferences.offsetSnow);
			getTxtSnow().setText(preferences.probSnow + "%");
			getChkSnowEmail().setChecked(preferences.snowEmail);
	
			activateWakeUp(null);
		}
		
		
	}

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		
		preferencesController=new PreferencesController(this);

		ArrayAdapter adapter = ArrayAdapter.createFromResource(this,
				R.array.offsets, android.R.layout.simple_spinner_item);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		getSpnRainOffset().setAdapter(adapter);

		getSpnSnowOffset().setAdapter(adapter);

		getSeekRain().setOnSeekBarChangeListener(
				new SeekBar.OnSeekBarChangeListener() {

					public void onProgressChanged(SeekBar seekBar,
							int progress, boolean fromUser) {
						getTxtRain().setText(String.valueOf(progress) + "%");
					}

					public void onStartTrackingTouch(SeekBar seekBar) {

					}

					public void onStopTrackingTouch(SeekBar seekBar) {

					}

				});

		getSeekSnow().setOnSeekBarChangeListener(
				new SeekBar.OnSeekBarChangeListener() {

					public void onProgressChanged(SeekBar seekBar,
							int progress, boolean fromUser) {
						getTxtSnow().setText(String.valueOf(progress) + "%");
					}

					public void onStartTrackingTouch(SeekBar seekBar) {

					}

					public void onStopTrackingTouch(SeekBar seekBar) {

					}

				});

	}

	

	public void activateWakeUp(View view) {
		if (getChkActivate().isChecked()) {
			getChkNotification().setEnabled(true);
			getChkRainWakeUp().setEnabled(true);
			getChkSnowWakeUp().setEnabled(true);
			getSpnRainOffset().setEnabled(true);
			getSpnSnowOffset().setEnabled(true);
		} else {
			getChkNotification().setChecked(false);
			getChkNotification().setEnabled(false);
			getChkRainWakeUp().setChecked(false);
			getChkRainWakeUp().setEnabled(false);
			getChkSnowWakeUp().setChecked(false);
			getChkSnowWakeUp().setEnabled(false);
			getSpnRainOffset().setEnabled(false);
			getSpnSnowOffset().setEnabled(false);
		}
	}
	
	
	public void savePreferences(View view) {
		
		Preferences preferences=new Preferences(
				getTimePicker().getCurrentHour(), 
				getTimePicker().getCurrentMinute(), 
				getChkActivate().isChecked(), 
				getChkNotification().isChecked(), 
				getSeekRain().getProgress(), 
				getChkRainWakeUp().isChecked(), 
				getSpnRainOffset().getSelectedItemPosition(), 
				getChkRainEmail().isChecked(),
				getSeekSnow().getProgress(), 
				getChkSnowWakeUp().isChecked(), 
				getSpnSnowOffset().getSelectedItemPosition(), 
				getChkSnowEmail().isChecked());
		
		preferencesController.savePreferences(preferences);
		
		WeatherUtils.createCancelAlarm(this, this
				.getChkActivate().isChecked(), this
				.getChkNotification().isChecked());

		finish();
	}
	
	
	public boolean logIn(){
		SharedPreferences settings = PreferenceManager
		.getDefaultSharedPreferences(this);

		String authToken = getAuthToken();
		
		if (authToken==null){
			authToken=settings.getString("authToken", null);
			setAuthToken(authToken);
		}
		//If there is no authToken, show Login Screen
		if (authToken==null){
			Intent i = new Intent(this, Login.class);
			i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
			startActivity(i);
			return false;
		}
		return true;
	}

	

	

	

}